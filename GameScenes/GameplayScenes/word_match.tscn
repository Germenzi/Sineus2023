[gd_scene load_steps=6 format=3 uid="uid://7k76twct10lf"]

[ext_resource type="LabelSettings" uid="uid://cmvvkplrsact3" path="res://UIScenes/UIAssets/word_match_label_settings.tres" id="1_grdyw"]

[sub_resource type="GDScript" id="GDScript_nej85"]
resource_name = "main"
script/source = "extends Control

signal matched
signal failed

var _word_to_match : String = \"\"
var _is_matching : bool = false
var _match_index : int = 0
var _available_time : float

#func _ready() -> void:
	#begin(\"Привет как дела\", 100500)


func begin(word:String, time:float) -> void:
	%WordLabel.text = word.to_lower()
	_word_to_match = word.to_lower()
	%WordLabel/MatchLabel.text = \"\"
	_available_time = time
	%FailTimer.wait_time = time
	%FailTimer.start()
	_is_matching = true
	_match_index = 0 


func _input(event: InputEvent) -> void:
	if not _is_matching:
		return
	
	if event is InputEventKey and event.is_released():
		if _word_to_match[_match_index].to_lower() in KeycodeTranslatorNamespace.KEYCODE_MAP.get(event.keycode, \"\").to_lower():
			%WordLabel/MatchLabel.text += _word_to_match[_match_index].to_lower()
			_match_index += 1
			if _match_index == len(_word_to_match):
				_is_matching = false
				%FailTimer.stop()
				matched.emit()
				return
			
			while _word_to_match[_match_index] == \" \": 
				%WordLabel/MatchLabel.text += \" \"
				_match_index += 1


func _process(delta: float) -> void:
	if not _is_matching:
		return
	
	%WordLabel.material.set_shader_parameter(\"progress\", 1.0-%FailTimer.time_left / _available_time)


func _on_matched() -> void:
	print(\"Matched\")


func _on_fail_timer_timeout() -> void:
	_is_matching = false
	failed.emit()
"

[sub_resource type="Shader" id="Shader_xy7lo"]
code = "shader_type canvas_item;


uniform float alpha_factor = 0.5;
uniform float progress = 0.0;

void fragment() {
	vec4 col = texture(TEXTURE, UV);
	col.a *= alpha_factor;
	if (UV.x < progress) {
		col.a = mix(col.a, 0.0, 1.0-UV.x/progress);
	}
	COLOR = col;
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4suni"]
shader = SubResource("Shader_xy7lo")
shader_parameter/alpha_factor = 0.2
shader_parameter/progress = 0.0

[sub_resource type="GDScript" id="GDScript_cbigr"]
resource_name = "aghldhjifgkhglareh"
script/source = "extends Label


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	text = \"%.3f\" % %FailTimer.time_left
"

[node name="WordMatch" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_nej85")

[node name="CenterContainer" type="CenterContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="WordLabel" type="Label" parent="CenterContainer"]
unique_name_in_owner = true
self_modulate = Color(1, 1, 1, 0.329412)
material = SubResource("ShaderMaterial_4suni")
layout_mode = 2
text = "Привет"
label_settings = ExtResource("1_grdyw")

[node name="MatchLabel" type="Label" parent="CenterContainer/WordLabel"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
label_settings = ExtResource("1_grdyw")

[node name="FailTimer" type="Timer" parent="."]
unique_name_in_owner = true
one_shot = true

[node name="Label" type="Label" parent="."]
visible = false
layout_mode = 0
offset_left = 499.0
offset_top = 182.0
offset_right = 634.0
offset_bottom = 230.0
label_settings = ExtResource("1_grdyw")
script = SubResource("GDScript_cbigr")

[connection signal="matched" from="." to="." method="_on_matched"]
[connection signal="timeout" from="FailTimer" to="." method="_on_fail_timer_timeout"]
